{"ast":null,"code":"var _jsxFileName = \"/Users/Lorenzo/Desktop/Sito-Paul/src/components/products-grid/products-grid.jsx\";\nimport React from 'react';\nimport Product from \"../product/product\";\nimport SHOP_DATA, { objProducts } from \"./shop.data\";\nimport \"./products-grid.scss\";\n\nclass ProductsGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collections: SHOP_DATA,\n      products: objProducts,\n      prodsDisplayed: 12\n    };\n  } //i create a new array and put every item of every collection in it\n\n\n  render() {\n    let arrayProducts = this.state.products; //if a category is selected i filter the array\n\n    if (this.props.filterProducts !== \"All\") {\n      arrayProducts = arrayProducts.filter(product => product.category === this.props.filterProducts);\n    } //if a sort option is selected i sort the array\n\n\n    if (this.props.sortProducts !== \"0\") {\n      this.props.sortProducts === \"+\" ? arrayProducts.sort((a, b) => parseFloat(b.price) - parseFloat(a.price)) : arrayProducts.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n    } else {\n      //if no sort i reverse the array because when add a new collection it comes last\n      arrayProducts.reverse();\n    }\n\n    console.log(this.state.prodsDisplayed > arrayProducts.length + \" AAAAAAAAÆ\");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"products-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, arrayProducts.slice(0, this.state.prodsDisplayed).map(({\n      id,\n      ...itemProps\n    }, index) => /*#__PURE__*/React.createElement(Product, Object.assign({\n      key: index\n    }, itemProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        prodsDisplayed: this.state.prodsDisplayed + 12\n      }),\n      className: this.state.prodsDisplayed > arrayProducts.length ? \"d-none\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"More products\"));\n  }\n\n}\n\nexport default ProductsGrid;","map":{"version":3,"sources":["/Users/Lorenzo/Desktop/Sito-Paul/src/components/products-grid/products-grid.jsx"],"names":["React","Product","SHOP_DATA","objProducts","ProductsGrid","Component","constructor","props","state","collections","products","prodsDisplayed","render","arrayProducts","filterProducts","filter","product","category","sortProducts","sort","a","b","parseFloat","price","reverse","console","log","length","slice","map","id","itemProps","index","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,IAAoBC,WAApB,QAAuC,aAAvC;AAEA,OAAO,sBAAP;;AAIA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAEP,SADJ;AAETQ,MAAAA,QAAQ,EAAEP,WAFD;AAGTQ,MAAAA,cAAc,EAAE;AAHP,KAAb;AAKH,GAVsC,CAanC;;;AAEJC,EAAAA,MAAM,GAAG;AAEL,QAAIC,aAAa,GAAG,KAAKL,KAAL,CAAWE,QAA/B,CAFK,CAIL;;AACA,QAAG,KAAKH,KAAL,CAAWO,cAAX,KAA8B,KAAjC,EAAwC;AACpCD,MAAAA,aAAa,GAAGA,aAAa,CAACE,MAAd,CAAqBC,OAAO,IAAIA,OAAO,CAACC,QAAR,KAAqB,KAAKV,KAAL,CAAWO,cAAhE,CAAhB;AACH,KAPI,CASL;;;AACA,QAAG,KAAKP,KAAL,CAAWW,YAAX,KAA4B,GAA/B,EAAoC;AAChC,WAAKX,KAAL,CAAWW,YAAX,KAA4B,GAA5B,GACAL,aAAa,CAACM,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACD,CAAC,CAACE,KAAH,CAAV,GAAsBD,UAAU,CAACF,CAAC,CAACG,KAAH,CAA7D,CADA,GAEEV,aAAa,CAACM,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACF,CAAC,CAACG,KAAH,CAAV,GAAsBD,UAAU,CAACD,CAAC,CAACE,KAAH,CAA7D,CAFF;AAGH,KAJD,MAKK;AACD;AACAV,MAAAA,aAAa,CAACW,OAAd;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWG,cAAX,GAA4BE,aAAa,CAACc,MAAd,GAAuB,YAA/D;AAEA,wBACI,uDACI;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQd,aAAa,CAACe,KAAd,CAAoB,CAApB,EAAwB,KAAKpB,KAAL,CAAWG,cAAnC,EAAoDkB,GAApD,CAAwD,CAAC;AAAEC,MAAAA,EAAF;AAAM,SAAGC;AAAT,KAAD,EAAuBC,KAAvB,kBACpD,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAGA;AAAf,OAA4BD,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CAFR,CADJ,eAQI;AAAS,MAAA,OAAO,EAAE,MAAK,KAAKE,QAAL,CAAc;AAACtB,QAAAA,cAAc,EAAE,KAAKH,KAAL,CAAWG,cAAX,GAA4B;AAA7C,OAAd,CAAvB;AACA,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,cAAX,GAA4BE,aAAa,CAACc,MAA1C,GAAmD,QAAnD,GAA8D,EADzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARJ,CADJ;AAcH;;AAlDsC;;AAqD3C,eAAevB,YAAf","sourcesContent":["import React from 'react'\n\nimport Product from \"../product/product\"\nimport SHOP_DATA, { objProducts } from \"./shop.data\"\n\nimport \"./products-grid.scss\"\n\n\n\nclass ProductsGrid extends React.Component { \n     \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            collections: SHOP_DATA,\n            products: objProducts,\n            prodsDisplayed: 12\n        }\n    }\n\n        \n        //i create a new array and put every item of every collection in it\n\n    render() {\n        \n        let arrayProducts = this.state.products\n\n        //if a category is selected i filter the array\n        if(this.props.filterProducts !== \"All\") {\n            arrayProducts = arrayProducts.filter(product => product.category === this.props.filterProducts)           \n        }\n\n        //if a sort option is selected i sort the array\n        if(this.props.sortProducts !== \"0\") {\n            this.props.sortProducts === \"+\" ? \n            arrayProducts.sort((a, b) => parseFloat(b.price) - parseFloat(a.price)) \n            : arrayProducts.sort((a, b) => parseFloat(a.price) - parseFloat(b.price))\n        }\n        else {\n            //if no sort i reverse the array because when add a new collection it comes last\n            arrayProducts.reverse()\n        }\n        console.log(this.state.prodsDisplayed > arrayProducts.length + \" AAAAAAAAÆ\")\n\n        return (\n            <>\n                <div id=\"products-grid\">\n                    {           \n                        arrayProducts.slice(0, (this.state.prodsDisplayed)).map(({ id, ...itemProps }, index) => (\n                            <Product key={ index } { ...itemProps } />\n                        )) \n                    }                 \n                </div>     \n                <button  onClick={()=> this.setState({prodsDisplayed: this.state.prodsDisplayed + 12})} \n                className={this.state.prodsDisplayed > arrayProducts.length ? \"d-none\" : \"\"}  \n                >More products</button>    \n            </>\n        )\n    }\n}\n\nexport default ProductsGrid"]},"metadata":{},"sourceType":"module"}