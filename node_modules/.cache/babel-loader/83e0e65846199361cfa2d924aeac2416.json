{"ast":null,"code":"import { ADD_CART_ITEM, REMOVE_CART_ITEM, MODIFY_CART_ITEM } from \"../actions/types\";\n\nconst cartReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      const cartItemToAdd = action.payload;\n      const existingCartItems = state.find(item => item.id === cartItemToAdd.id && item.size === cartItemToAdd.size);\n\n      if (existingCartItems) {\n        return state.map(cartItem => cartItem.id === cartItemToAdd.id && cartItem.size === cartItemToAdd.size ? { ...cartItem,\n          quantity: cartItem.quantity + 1\n        } : cartItem);\n      }\n\n      return [...state, { ...cartItemToAdd,\n        quantity: 1\n      }];\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/Lorenzo/Desktop/Sito-Paul/src/reducers/cart.reducer.js"],"names":["ADD_CART_ITEM","REMOVE_CART_ITEM","MODIFY_CART_ITEM","cartReducer","state","action","type","cartItemToAdd","payload","existingCartItems","find","item","id","size","map","cartItem","quantity"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,EAA0CC,gBAA1C,QAAkE,kBAAlE;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,aAAL;AACQ,YAAMO,aAAa,GAAGF,MAAM,CAACG,OAA7B;AACA,YAAMC,iBAAiB,GAAGL,KAAK,CAACM,IAAN,CAAWC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYL,aAAa,CAACK,EAA1B,IAAgCD,IAAI,CAACE,IAAL,KAAcN,aAAa,CAACM,IAAhF,CAA1B;;AACA,UAAGJ,iBAAH,EAAqB;AACjB,eAAOL,KAAK,CAACU,GAAN,CAAUC,QAAQ,IAEpBA,QAAQ,CAACH,EAAT,KAAgBL,aAAa,CAACK,EAA9B,IAAoCG,QAAQ,CAACF,IAAT,KAAkBN,aAAa,CAACM,IAArE,GACE,EAAE,GAAGE,QAAL;AAAeC,UAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,GAAoB;AAA7C,SADF,GAEED,QAJC,CAAP;AAMH;;AACD,aAAO,CAAC,GAAGX,KAAJ,EAAW,EAAC,GAAGG,aAAJ;AAAmBS,QAAAA,QAAQ,EAAE;AAA7B,OAAX,CAAP;;AAER;AACI,aAAOZ,KAAP;AAfR;AAiBH,CAlBD;;AAmBA,eAAeD,WAAf","sourcesContent":["import { ADD_CART_ITEM, REMOVE_CART_ITEM, MODIFY_CART_ITEM } from \"../actions/types\"\n\nconst cartReducer = (state = [], action) => {\n    switch (action.type) {\n        case ADD_CART_ITEM:\n                const cartItemToAdd = action.payload\n                const existingCartItems = state.find(item => (item.id === cartItemToAdd.id && item.size === cartItemToAdd.size))\n                if(existingCartItems){\n                    return state.map(cartItem => (\n                        \n                        (cartItem.id === cartItemToAdd.id && cartItem.size === cartItemToAdd.size)\n                        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n                        : cartItem\n                    ))\n                }\n                return [...state, {...cartItemToAdd, quantity: 1}]\n\n        default:\n            return state  \n}\n}\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}